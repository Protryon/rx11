
type GetVersionRequest = container {
    client_major_version: u16,
    client_minor_version: u16,
};

type GetVersionResponse = container {
    server_major_version: u16,
    server_minor_version: u16,
};

type CapableRequest = container {
};

type CapableResponse = container {
    capable: bool,
    .pad: 23,
};

type GetTimeoutsRequest = container {
};

type GetTimeoutsResponse = container {
    standby_timeout: u16,
    suspend_timeout: u16,
    off_timeout: u16,
    .pad: 18,
};

type SetTimeoutsRequest = container {
    standby_timeout: u16,
    suspend_timeout: u16,
    off_timeout: u16,
};

type EnableRequest = container {
};

type DisableRequest = container {
};

type DPMSMode = enum u16 {
    On = 0,
    Standby,
    Suspend,
    Off,
};

type ForceLevelRequest = container {
    power_level: DPMSMode,
};

type InfoRequest = container {
};

type InfoResponse = container {
    power_level: DPMSMode,
    state: bool,
    .pad: 21,
};
